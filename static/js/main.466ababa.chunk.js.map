{"version":3,"sources":["img/personal1.png","img/personal2.png","img/haendlr1.png","img/haendlr2.png","img/haendlr3.png","img/screen1.PNG","img/screen2.PNG","img/screen4.PNG","components/Item.js","components/ImageFeed.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Item","props","react_default","a","createElement","dist","width","mx","my","color","boxShadow","src","imagePath","borderRadius","fontSize","mt","text","ImageFeed","justifyContent","flexWrap","pt","bg","fontWeight","components_Item","haendlr1","haendlr3","haendlr2","personal1","personal2","guse3","guse2","guse1","Header","px","alignItems","href","Footer","py","App","className","components_Header","components_ImageFeed","components_Footer","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.466ababa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/personal1.51c925c7.png\";","module.exports = __webpack_public_path__ + \"static/media/personal2.9cd1f66d.png\";","module.exports = __webpack_public_path__ + \"static/media/haendlr1.0e6eac9f.png\";","module.exports = __webpack_public_path__ + \"static/media/haendlr2.57f7b66f.png\";","module.exports = __webpack_public_path__ + \"static/media/haendlr3.b9648160.png\";","module.exports = __webpack_public_path__ + \"static/media/screen1.e3e926b9.PNG\";","module.exports = __webpack_public_path__ + \"static/media/screen2.fdf68e72.PNG\";","module.exports = __webpack_public_path__ + \"static/media/screen4.05d562d5.PNG\";","import React, { Component } from 'react';\r\nimport { Flex, Card, Image, Text } from 'rebass';\r\n\r\n\r\nfunction Item (props) {\r\n  return (<Flex>\r\n    <Card\r\n      width={[0.9, 0.8, 0.5]}\r\n      mx='auto'\r\n      my={2}\r\n      p={4}\r\n      color='#373543'\r\n    boxShadow='0 2px 16px rgba(0, 0, 0, 0.25)'>\r\n      <Image\r\n        src={props.imagePath}\r\n        borderRadius={7}\r\n      />\r\n      <Text fontSize={2} mt={2}>\r\n        {props.text}\r\n      </Text>\r\n    </Card>\r\n  </Flex>);\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport Item from './Item';\r\nimport { Text, Box, Flex } from 'rebass';\r\nimport personal1 from '../img/personal1.png'\r\nimport personal2 from '../img/personal2.png'\r\nimport haendlr1 from '../img/haendlr1.png'\r\nimport haendlr2 from '../img/haendlr2.png'\r\nimport haendlr3 from '../img/haendlr3.png'\r\nimport guse1 from '../img/screen1.PNG'\r\nimport guse2 from '../img/screen2.PNG'\r\nimport guse3 from '../img/screen4.PNG'\r\n\r\n\r\nconst ImageFeed = function (props) {\r\n  return (\r\n    <div>\r\n      <Flex justifyContent='center' flexWrap='nowrap'>\r\n        <Box p={4} pt={5} bg='white' color='#373543' width={[0.9, 0.8, 0.5]}>\r\n          <Text fontSize={4} fontWeight='bold'>\r\n            web shop: h√§ndlr.\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n      <Item imagePath={haendlr1} text=\"this is a screenshot of a webshop i built. i used Typescript and React for the frontend.\r\n      further customizations were made using CSS and html.\" />\r\n      <Item imagePath={haendlr3} text=\"the design is responsive, i.e. it adjusts to various screen sizes. the page itself is in german, for\r\n      a german audience. however, the shown articles come from a database in english and therefore have english properties.\" />\r\n      <Item imagePath={haendlr2} text=\"the entire application follows the same color and font scheme. furthermore, all text containers\r\n      look the same, creating unity within the web application.\" />\r\n      <Flex justifyContent='center' flexWrap='nowrap'>\r\n        <Box p={4} pt={5} bg='white' color='#373543' width={[0.9, 0.8, 0.5]}>\r\n          <Text fontSize={4} fontWeight='bold'>\r\n            personal website.\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n      <Item imagePath={personal1} text=\"this is a screenshot of my personal website. the main site\r\n        shows miniature views of my projects. i built it using Javascript and React.\r\n      i also customized the site further using html and CSS.\" />\r\n      <Item imagePath={personal2} text=\"this is another screenshot from my personal website.\r\n        it was taken from the detailed post view, which is shown as the user selects one of the posts. throughout the entire\r\n      website, i used the material design principles.\" />\r\n      <Flex justifyContent='center' flexWrap='nowrap'>\r\n        <Box p={4} pt={5} bg='white' color='#373543' width={[0.9, 0.8, 0.5]}>\r\n          <Text fontSize={4} fontWeight='bold'>\r\n            web app: guse.\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n      <Item imagePath={guse3} text=\"this is a screenshot of a web app i built using React and Javascript. again, the site follows a unified\r\n      design concept, in colors, fonts and structural elements.\" />\r\n      <Item imagePath={guse2} text=\"the web app takes in user input to assemble a personalized investment portfolio.\r\n      the purpose of the platform is to help non-finance experts make sound personal finance decisions.\" />\r\n      <Item imagePath={guse1} text=\"me and my team built this as a part of a hackathon project at Calhacks, the world's largest collegiate\r\n      hackathon. with the app, we won the IBM challenge, against over 2,000 competitors.\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageFeed;\r\n","import React from 'react';\r\nimport { Flex, Text, Link, Box} from 'rebass';\r\n\r\nconst Header = function (props) {\r\n  return (<Flex\r\n    px={2}\r\n    color='white'\r\n    bg='#373543'\r\n          alignItems='center'>\r\n    <Text p={2} fontWeight='bold'>julius vering.</Text>\r\n    <Box mx='auto' />\r\n    <Link\r\n      href='https://www.github.com/juliusvering'\r\n      p={2}\r\n    color='white'>\r\n      github.\r\n    </Link>\r\n    <Link\r\n      href='https://www.linkedin.com/in/julius-vering'\r\n      p={2}\r\n    color='white'>\r\n      linkedin.\r\n    </Link>\r\n    <Link\r\n      href='https://www.juliusvering.com'\r\n      p={2}\r\n    color='white'>\r\n      personal website.\r\n    </Link>\r\n    <Link\r\n      href='mailto:julius.vering@berkeley.edu'\r\n      p={2}\r\n    color='white'>\r\n      email.\r\n    </Link>\r\n  </Flex>);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Flex, Text, Link, Box} from 'rebass';\r\n\r\nconst Footer = function (props) {\r\n  return (<Flex\r\n    px={2}\r\n    mt={5}\r\n    py={50}\r\n    color='white'\r\n    bg='#373543'\r\n          alignItems='center'>\r\n    <Text p={2} color=\"gray\" fontWeight='bold'>(c) 2018. Julius Vering.</Text>\r\n    <Box mx='auto' />\r\n    <Link\r\n      href='https://www.github.com/juliusvering'\r\n      p={2}\r\n    color='white'>\r\n      github.\r\n    </Link>\r\n    <Link\r\n      href='https://www.linkedin.com/in/julius-vering'\r\n      p={2}\r\n    color='white'>\r\n      linkedin.\r\n    </Link>\r\n    <Link\r\n      href='https://www.juliusvering.com'\r\n      p={2}\r\n    color='white'>\r\n      personal website.\r\n    </Link>\r\n    <Link\r\n      href='mailto:julius.vering@berkeley.edu'\r\n      p={2}\r\n    color='white'>\r\n      email.\r\n    </Link>\r\n  </Flex>);\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport ImageFeed from './components/ImageFeed';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport { Box, Text, Flex } from 'rebass';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Flex justifyContent='center' flexWrap='nowrap'>\n          <Box p={5} bg='white' color='#373543' width={[0.9, 0.8, 0.5]}>\n            <Text fontSize={5} fontWeight='bold'>\n              welcome to julius vering's design portfolio page.\n            </Text>\n          </Box>\n        </Flex>\n        <ImageFeed />\n        <Footer />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}